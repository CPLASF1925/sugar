apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def gitUrl = 'https://github.com/wobiancao/sugar.git'   // Git仓库的url
def siteUrl = 'https://github.com/wobiancao/sugar'   // 项目的主页

group = "com.wobiancao.sugar"
version = "1.0.0" // 版本号

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    pkg {
        repo = 'sugar'
        name = 'sugar'
        licenses = ["Apache-2.0"]
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        publish = true // 是否是公开项目。
    }
    configurations = ['archives']
}



install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'sugar'
                description 'Sugar for Android use Mvp + Rxjava2 + retrofit2 + rxlifecycle2, to make your developing quicker and easier.'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'wobiancao'        //填写bintray或者github的用户名
                        name 'wobiancao'         //姓名，可以是中文
                        email '420245103@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
